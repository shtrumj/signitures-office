// Ref: https://github.com/run27017/nested-json-to-table/issues/1
const test = require('ava')
const jsonToTable = require('../../src/jsonToTable/jsonToTable')
const Builder = require('../jsonToTable/Builder')

const meta = {
  "order": [
    "array"
  ],
  "mapping": {
    "array": {
      "title": "array",
      "meta": {
        "order": [
          "object",
          "scalar"
        ],
        "mapping": {
          "object": {
            "title": "object",
            "meta": {
              "order": [
                "a",
                "b"
              ],
              "mapping": {
                "a": {
                  "title": "a"
                },
                "b": {
                  "title": "b"
                }
              }
            }
          },
          "scalar": {
            "title": "scalar"
          }
        }
      }
    }
  }
}

const data = [
  {
    "array": [
      {
        "object": {
          "a": "a",
          "b": "b"
        },
        "scalar": "c"
      }
    ]
  }
]

test('convert json of issue 1', t => {
  const builder = new Builder()
  jsonToTable(meta, data, builder)
  t.deepEqual(builder.data, {
    "head": [
    [
      { "data": "array", "rowSpan": 1, "colSpan": 3, "isHead": true }
    ],
    [
      { "data": "object", "rowSpan": 1, "colSpan": 2, "isHead": true },
      { "data": "scalar", "rowSpan": 2, "colSpan": 1, "isHead": true }
    ],
    [
      { "data": "a", "rowSpan": 1, "colSpan": 1, "isHead": true },
      { "data": "b", "rowSpan": 1, "colSpan": 1, "isHead": true }
    ]
    ],
    "body": [
      [
        { "data": "a", "rowSpan": 1, "colSpan": 1, "isHead": false },
        { "data": "b", "rowSpan": 1, "colSpan": 1, "isHead": false },
        { "data": "c", "rowSpan": 1, "colSpan": 1, "isHead": false }
      ]
    ]
  })
})

